## HTML规范

### 文档规范

- 使用 HTML5 的文档声明类型 

### 脚本加载

- 兼容所有浏览器

```
<html>
  <head>
    <link rel="stylesheet" href="main.css">
  </head>
  <body>
    <!-- body goes here -->

    <script src="main.js" async></script>
  </body>
</html>
```

- 兼容现代浏览器

```
<html>
  <head>
    <link rel="stylesheet" href="main.css">
    <script src="main.js" async></script>
  </head>
  <body>
    <!-- body goes here -->
  </body>
</html>
```

### 语义化

- 正确合理使用nav, header, article, section 等语义标签，不要全篇div

### alt标签不为空

### 结构、表现、行为三者分离

- 尽量在文档和模板中只包含结构性的 HTML；
- 将所有表现代码，移入样式表中；
- 将所有动作行为，移入脚本之中。

### HTML只关注内容

- HTML只显示展示内容信息
- 不要引入一些特定的 HTML 结构来解决一些视觉设计问题，多考虑使用伪元素:before、:after
- 不要将 img 元素当做专门用来做视觉设计的元素
- 样式上的问题应该使用css解决

### 代码规范

- **缩进**

  采用4个空格，禁止使用tab字符。

- **空格**

- 二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。

- 用作代码块起始的左花括号 { 前必须有一个空格。

- if / else / for / while / function / switch / do / try / catch / finally 关键字后，必须有一个空格。

- 函数声明、具名函数表达式、函数调用中，函数名和 ( 之间不允许有空格。

- , 和 ; 前不允许有空格。

- **命名**

  - `class` 必须单词全字母小写，单词间以 `-` 分隔。
  - `class` 必须代表相应模块或部件的内容或功能，不得以样式信息进行命名。
  - 元素 id 必须保证页面唯一。
  - 同一页面，应避免使用相同的 name 与 id。

- **每行最多字符数**

  120个字符

  - 运算符处换行时，运算符必须在新行的行首。
  - 在函数声明、函数表达式、函数调用、对象创建、数组创建、for 语句等场景中，不允许在 , 或 ; 前换行。

- **标签**

  - 标签名必须使用小写字母。
  - 对 HTML5 中规定允许省略的闭合标签，不允许省略闭合标签。
  - 标签使用必须符合标签嵌套规则。

- **属性**

  - 属性名必须使用小写字母。
  - 属性值必须用双引号包围。

- **head**

  - 页面必须包含 title 标签声明标题。
  - title 必须作为 head 的直接子元素，并紧随 charset 声明之后。

- **图片**

  - 禁止 img 的 src 取值为空。延迟加载的图片也要增加默认的 src。

- **按钮**

  - 使用 button 元素时必须指明 type 属性值。

- **通用规则**

  - DOCTYPE：使用 `HTML5` 的 `doctype` 来启用标准模式，建议使用大写的 `DOCTYPE`。
  - 编码：页面必须使用精简形式，明确指定字符编码。指定字符编码的 meta 必须是 head 的第一个直接子元素。
  - CSS 和 JavaScript 引入：引入 CSS 时必须指明 rel="stylesheet"。
  - 在 head 中引入页面需要的所有 CSS 资源。
  - JavaScript 应当放在页面末尾，或采用异步加载。

## CSS规范

- **缩进**

  采用4个空格，禁止使用tab字符。

- **空格**

  - 选择器 与 { 之间必须包含空格。
  - 属性名 与之后的 : 之间不允许包含空格， : 与 属性值 之间必须包含空格

- **每行最多字符数** 每行不得超过 120 个字符，除非单行不可分割。

- **选择器**

  - 当一个 rule 包含多个 selector 时，每个选择器声明必须独占一行。
  - `>`、`+`、`~` 选择器的两边各保留一个空格。
  - 

- **属性定义**

  - 属性定义必须另起一行。
  - 属性定义后必须以分号结尾。


- **属性格式**

  - 为了保证一致性和可扩展性，每个声明应该用分号结束，每个声明换行。
  - 属性名的冒号后使用一个空格。出于一致性的原因，属性和值（但属性和冒号之间没有空格）的之间始终使用一个空格。
  - 每个选择器和属性声明总是使用新的一行。
  - 属性选择器或属性值用双引号（””），而不是单引号（”）括起来。
  - URI值（url()）不要使用引号。
- **属性顺序**
  - 布局相关(display, position, float, overflow, clear)，因为元素的布局会对对相邻元素产生影响，自身甚至会脱离原来的文档流，所以比较重要。
  - 盒模型相关(width, height, margin, padding)
  - 外观 (color, background, border, box-shadow)
  - 文字排版 (font-size, font-family, text-align, text-transform)
  - 其他 (cursor, z-index)

- **文本**

  - 文本内容必须用双引号包围。
  - 当数值为 0 - 1 之间的小数时，省略整数部分的 0。
  - url() 函数中的路径不加引号。

- **长度** 长度为 0 时须省略单位。 (也只有长度单位可省)

- **颜色**

  - RGB颜色值必须使用十六进制记号形式 #rrggbb。不允许使用 rgb()。
  - 带有alpha的颜色信息可以使用 rgba()。使用 rgba() 时每个逗号后必须保留一个空格。
  - 颜色值可以缩写时，必须使用缩写形式。
  - 颜色值不允许使用命名色值。

- **字体族** font-family 属性中的字体族名称应使用字体的英文 Family Name，其中如有空格，须放置在引号中。 任何运算符左右必须加一个空格

- **字号**

  需要在 Windows 平台显示的中文内容，其字号应不小于 12px。

- **id和class的命名**

  ID和class的名称总是使用可以反应元素目的和用途的名称，或其他通用的名称，代替表象和晦涩难懂的名称

- **合理的使用ID**

  ID一般不用于样式，使用class解决样式问题

- **尽量使用缩写属性**

```
border-top: 0;
font: 100%/1.6 palatino, georgia, serif;
padding: 0 1em 2em;
```

## Vue规范

[Vue官方代码规范](https://cn.vuejs.org/v2/style-guide/index.html)
